{"remainingRequest":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/babel-loader/lib/index.js!/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/src/views/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/src/views/Detail.vue","mtime":1618558547771},{"path":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/winter/Projects/Medical_Image_Detection_System_For_COVID19/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBjb2x1bW5zID0gW3sKICB0aXRsZTogIuaWh+S7tuWQjSIsCiAgZGF0YUluZGV4OiAiZmlsZW5hbWUiLAogIGtleTogImZpbGVuYW1lIgp9LCB7CiAgdGl0bGU6ICLnsbvlnosiLAogIGRhdGFJbmRleDogImNhdGVnb3J5IiwKICBrZXk6ICJjYXRlZ29yeSIsCiAgc2NvcGVkU2xvdHM6IHsKICAgIGN1c3RvbVJlbmRlcjogImNhdGVnb3J5IgogIH0KfSwgewogIHRpdGxlOiAi6K+K5patIiwKICBrZXk6ICJkaWFnbm9zaXMiLAogIGRhdGFJbmRleDogImRpYWdub3NpcyIsCiAgc2NvcGVkU2xvdHM6IHsKICAgIGN1c3RvbVJlbmRlcjogImRpYWdub3NpcyIKICB9Cn0sIHsKICB0aXRsZTogIuaTjeS9nCIsCiAga2V5OiAiYWN0aW9uIiwKICBzY29wZWRTbG90czogewogICAgY3VzdG9tUmVuZGVyOiAiYWN0aW9uIgogIH0KfV07CmltcG9ydCByZXF3ZXN0IGZyb20gInJlcXdlc3QiOwppbXBvcnQgeyBnZXRDb29raWUgfSBmcm9tICIuLi91dGlscy9jb29raWUuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRyZWNvcmQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5kcmVjb3JkLAogICAgICByYXdJbWFnZU9uU2hvdzogIi4uL2Fzc2V0cy9DVC5wbmciLAogICAgICBhbm5vdGF0aW9uSW1hZ2VPblNob3c6ICIuLi9hc3NldHMvQ1QucG5nIiwKICAgICAgaW5mbzogewogICAgICAgIG5hbWU6ICJuYW1lIiwKICAgICAgICBkZXNjcmlwdGlvbjogImRlc2NyaXB0aW9uIiwKICAgICAgICB0aW1lOiAidGltZSIsCiAgICAgICAgbnVtOiAxLAogICAgICAgIGRpYWdub3NpczogIkNPVklELTE5IgogICAgICB9LAogICAgICBkYXRhOiBbewogICAgICAgIGNhdGVnb3J5OiAiQ1QiLAogICAgICAgIGRlc2NyaXB0aW9uOiAidGhpcyBpcyBhIHRlc3QgZm9yIE5vcm1hbCIsCiAgICAgICAgZGlhZ25vc2lzOiAiTm9ybWFsIiwKICAgICAgICBrZXk6IDEsCiAgICAgICAgbmFtZTogImN0IHRlc3QxIiwKICAgICAgICBudW06IDEsCiAgICAgICAgdGltZTogIjIwMjEtMDQtMTUgMTI6NDU6NDAiCiAgICAgIH1dLAogICAgICBjb2x1bW5zOiBjb2x1bW5zCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8g5qOA5p+l5piv5ZCm55m75b2VCiAgICB2YXIgX3Rva2VuID0gZ2V0Q29va2llKCJ0b2tlbiIpOwoKICAgIGlmIChfdG9rZW4gPT09IHVuZGVmaW5lZCB8fCBfdG9rZW4gPT0gIiIpIHsKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoIi9Mb2dpbiIpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5kcmVjb3JkID0gdGhpcy4kcm91dGUucGFyYW1zLmRyZWNvcmQ7IC8vIOajgOafpeaYr+WQpuiOt+WPluWIsGRyZWNvcmRpZAoKICAgICAgaWYgKHRoaXMuZHJlY29yZCA9PSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSgiL0hvbWUvUmVjb3JkIik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g6K+35rGC5paH5Lu25YiX6KGoCiAgICAgICAgcmVxd2VzdCh7CiAgICAgICAgICB1cmw6ICJodHRwOi8vMTI3LjAuMC4xOjUwMDAvZ2V0UmVjb3JkRGV0YWlsIiwKICAgICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgIHRva2VuOiBnZXRDb29raWUoInRva2VuIikKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIGRyZWNvcmQ6IHRoaXMuZHJlY29yZAogICAgICAgICAgfSwKICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygic3VjZXNzIiwgZSk7CiAgICAgICAgICAgIF90aGlzLmRhdGEgPSBlLmFyZWNvcmRzOwogICAgICAgICAgICBfdGhpcy5pbmZvID0gZS5pbmZvOwogICAgICAgICAgfSwKICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcigpIHt9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIh+aNouaYvuekuuWbvuWDjwogICAgc2hvd0ltYWdlczogZnVuY3Rpb24gc2hvd0ltYWdlcyhyZWNvcmQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXF3ZXN0KHsKICAgICAgICB1cmw6ICJodHRwOi8vMTI3LjAuMC4xOjUwMDAvZ2V0SW1hZ2UiLAogICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgcmVzcG9uc2VUeXBlOiAiYXJyYXlidWZmZXIiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIGFyZWNvcmRpZDogcmVjb3JkLmFyZWNvcmRpZCwKICAgICAgICAgIGlzcmF3OiB0cnVlCiAgICAgICAgfSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKGUpIHsKICAgICAgICAgIF90aGlzMi5yYXdJbWFnZU9uU2hvdyA9ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsIiArIGUucmVzcG9uc2U7CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoKSB7fQogICAgICB9KTsKICAgICAgcmVxd2VzdCh7CiAgICAgICAgdXJsOiAiaHR0cDovLzEyNy4wLjAuMTo1MDAwL2dldEltYWdlIiwKICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgIHJlc3BvbnNlVHlwZTogImFycmF5YnVmZmVyIiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBhcmVjb3JkaWQ6IHJlY29yZC5hcmVjb3JkaWQsCiAgICAgICAgICBpc3JhdzogZmFsc2UKICAgICAgICB9LAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoZSkgewogICAgICAgICAgX3RoaXMyLmFubm90YXRpb25JbWFnZU9uU2hvdyA9ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsIiArIGUucmVzcG9uc2U7CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoKSB7fQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"background-color: #ececec; padding: 20px; height: 100%\">\n    <a-row :gutter=\"16\">\n      <a-card style=\"width: 100%; height: 100%; float: right\" :bordered=\"true\">\n        <a-descriptions title=\"检测记录\" layout=\"horizontal\">\n          <a-descriptions-item label=\"命名\">\n            {{ info.name }}\n          </a-descriptions-item>\n          <a-descriptions-item label=\"创建时间\">\n            {{ info.time }}\n          </a-descriptions-item>\n          <a-descriptions-item label=\"影像数量\">\n            {{ info.num }}\n          </a-descriptions-item>\n          <a-descriptions-item label=\"描述\">\n            {{ info.description }}\n          </a-descriptions-item>\n          <a-descriptions-item label=\"类型\">\n            <a-tag\n              :key=\"info.category\"\n              :color=\"info.category === 'CXR' ? 'CornflowerBlue' : 'BurlyWood '\"\n            >\n              {{ info.category }}\n            </a-tag>\n          </a-descriptions-item>\n          <a-descriptions-item label=\"诊断\">\n            <a-tag\n              style=\"margin-left: 10px\"\n              :color=\"\n                info.diagnosis === 'COVID-19'\n                  ? 'red'\n                  : info.diagnosis === 'CAP'\n                  ? 'yellow'\n                  : 'green '\n              \"\n            >\n              {{ info.diagnosis }}\n            </a-tag>\n          </a-descriptions-item>\n        </a-descriptions>\n        <a-divider type=\"horizontal\" />\n\n        <a-descriptions title=\"分析详情\" />\n        <a-table :columns=\"columns\" :data-source=\"data\">\n          <span slot=\"category\" slot-scope=\"category\">\n            <a-tag\n              :key=\"category\"\n              :color=\"category === 'CXR' ? 'CornflowerBlue' : 'BurlyWood '\"\n            >\n              {{ category.toUpperCase() }}\n            </a-tag>\n          </span>\n          <span slot=\"diagnosis\" slot-scope=\"diagnosis\">\n            <a-tag\n              :key=\"diagnosis\"\n              :color=\"\n                diagnosis === 'COVID-19'\n                  ? 'red'\n                  : diagnosis === 'CAP'\n                  ? 'yellow'\n                  : 'green'\n              \"\n            >\n              {{ diagnosis.toUpperCase() }}\n            </a-tag>\n          </span>\n          <span slot=\"action\" slot-scope=\"record\">\n            <a-button\n              type=\"primary\"\n              icon=\"file-image\"\n              size=\"large\"\n              @click=\"showImages(record)\"\n            >\n              显示\n            </a-button>\n          </span>\n        </a-table>\n        <a-row :gutter=\"16\">\n          <!-- 原始图片 -->\n          <a-col :span=\"8\">\n            <a-card hoverable style=\"width: 90%; margin: auto\" title=\"原始图像\">\n              <img\n                slot=\"cover\"\n                alt=\"选取对应文件即可显示\"\n                :src=\"rawImageOnShow\"\n              />\n            </a-card>\n          </a-col>\n          <!-- 分割可视化图片 -->\n          <a-col :span=\"8\">\n            <a-card\n              hoverable\n              style=\"width: 90%; margin: auto\"\n              title=\"疑似感染区域标注\"\n            >\n              <img\n                slot=\"cover\"\n                alt=\"选取对应文件即可显示\"\n                :src=\"annotationImageOnShow\"\n              />\n            </a-card>\n          </a-col>\n          <!-- 分析 -->\n          <a-col :span=\"8\">\n            <a-card hoverable style=\"width: 90%; margin: auto\" title=\"分析\">\n            </a-card>\n          </a-col>\n        </a-row>\n      </a-card>\n    </a-row>\n  </div>\n</template>\n<script>\nconst columns = [\n  {\n    title: \"文件名\",\n    dataIndex: \"filename\",\n    key: \"filename\",\n  },\n\n  {\n    title: \"类型\",\n    dataIndex: \"category\",\n    key: \"category\",\n    scopedSlots: { customRender: \"category\" },\n  },\n  {\n    title: \"诊断\",\n    key: \"diagnosis\",\n    dataIndex: \"diagnosis\",\n    scopedSlots: { customRender: \"diagnosis\" },\n  },\n  {\n    title: \"操作\",\n    key: \"action\",\n    scopedSlots: { customRender: \"action\" },\n  },\n];\nimport reqwest from \"reqwest\";\nimport { getCookie } from \"../utils/cookie.js\";\nexport default {\n  data() {\n    return {\n      drecord: this.$route.params.drecord,\n      rawImageOnShow: \"../assets/CT.png\",\n      annotationImageOnShow: \"../assets/CT.png\",\n      info: {\n        name: \"name\",\n        description: \"description\",\n        time: \"time\",\n        num: 1,\n        diagnosis: \"COVID-19\",\n      },\n      data: [\n        {\n          category: \"CT\",\n          description: \"this is a test for Normal\",\n          diagnosis: \"Normal\",\n          key: 1,\n          name: \"ct test1\",\n          num: 1,\n          time: \"2021-04-15 12:45:40\",\n        },\n      ],\n      columns,\n    };\n  },\n  created() {\n    // 检查是否登录\n    let _token = getCookie(\"token\");\n    if (_token === undefined || _token == \"\") {\n      this.$router.replace(\"/Login\");\n    } else {\n      this.drecord = this.$route.params.drecord;\n      // 检查是否获取到drecordid\n      if (this.drecord == undefined) {\n        this.$router.replace(\"/Home/Record\");\n      } else {\n        // 请求文件列表\n        reqwest({\n          url: \"http://127.0.0.1:5000/getRecordDetail\",\n          method: \"get\",\n          headers: {\n            token: getCookie(\"token\"),\n          },\n          data: { drecord: this.drecord },\n          success: (e) => {\n            console.log(\"sucess\", e);\n            this.data = e.arecords;\n            this.info = e.info;\n          },\n          error: () => {},\n        });\n      }\n    }\n  },\n  methods: {\n    // 切换显示图像\n    showImages(record) {\n      reqwest({\n        url: \"http://127.0.0.1:5000/getImage\",\n        method: \"get\",\n        responseType: \"arraybuffer\",\n        data: { arecordid: record.arecordid, israw: true },\n        success: (e) => {\n          this.rawImageOnShow = \"data:image/png;base64,\" + e.response;\n        },\n        error: () => {},\n      });\n      reqwest({\n        url: \"http://127.0.0.1:5000/getImage\",\n        method: \"get\",\n        responseType: \"arraybuffer\",\n        data: { arecordid: record.arecordid, israw: false },\n        success: (e) => {\n          this.annotationImageOnShow = \"data:image/png;base64,\" + e.response;\n        },\n        error: () => {},\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.space-align-container {\n  display: flex;\n  /* align-item: flex-start; */\n  flex-wrap: wrap;\n  /* width: 100%;\n  height: 100%; */\n}\n.space-align-block {\n  margin: 8px 4px;\n  border: 1px solid #40a9ff;\n  padding: 4px;\n  flex: none;\n  width: 100%;\n  height: 100%;\n}\n.space-align-block .mock-block {\n  display: inline-block;\n  padding: 32px 8px 16px;\n  background: rgba(150, 150, 150, 0.2);\n}\n</style>"],"sourceRoot":"src/views"}]}